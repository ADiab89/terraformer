!function(a,b){"object"==typeof module&&"object"==typeof module.exports&&(exports=module.exports=b()),"function"==typeof define&&define.amd&&define(b),"object"==typeof window&&(a.Terraformer=b())}(this,function(){function a(){this._thens=[]}function b(){var a=Array.prototype.slice.apply(arguments);void 0!==typeof console&&console.warn&&console.warn.apply(console,a)}function c(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}function d(a){switch(a.type){case"Point":return[a.coordinates[0],a.coordinates[1],a.coordinates[0],a.coordinates[1]];case"MultiPoint":return g(a.coordinates);case"LineString":return g(a.coordinates);case"MultiLineString":return e(a.coordinates);case"Polygon":return e(a.coordinates);case"MultiPolygon":return f(a.coordinates);case"Feature":return d(a.geometry);case"FeatureCollection":return h(a);case"GeometryCollection":return i(a);default:throw new Error("Unknown type: "+a.type)}}function e(a){for(var b=null,c=null,d=null,e=null,f=0;f<a.length;f++)for(var g=a[f],h=0;h<g.length;h++){var i=g[h],j=i[0],k=i[1];null===b?b=j:b>j&&(b=j),null===c?c=j:j>c&&(c=j),null===d?d=k:d>k&&(d=k),null===e?e=k:k>e&&(e=k)}return[b,d,c,e]}function f(a){for(var b=null,c=null,d=null,e=null,f=0;f<a.length;f++)for(var g=a[f],h=0;h<g.length;h++)for(var i=g[h],j=0;j<i.length;j++){var k=i[j],l=k[0],m=k[1];null===b?b=l:b>l&&(b=l),null===c?c=l:l>c&&(c=l),null===d?d=m:d>m&&(d=m),null===e?e=m:m>e&&(e=m)}return[b,d,c,e]}function g(a){for(var b=null,c=null,d=null,e=null,f=0;f<a.length;f++){var g=a[f],h=g[0],i=g[1];null===b?b=h:b>h&&(b=h),null===c?c=h:h>c&&(c=h),null===d?d=i:d>i&&(d=i),null===e?e=i:i>e&&(e=i)}return[b,d,c,e]}function h(a){for(var b,c=[],e=a.features.length-1;e>=0;e--)b=d(a.features[e].geometry),c.push([b[0],b[1]]),c.push([b[2],b[3]]);return g(c)}function i(a){for(var b,c=[],e=a.geometries.length-1;e>=0;e--)b=d(a.geometries[e]),c.push([b[0],b[1]]),c.push([b[2],b[3]]);return g(c)}function j(a){var b=d(a);return{x:b[0],y:b[1],w:Math.abs(b[0]-b[2]),h:Math.abs(b[1]-b[3])}}function k(a){return a*X}function l(a){return a*Y}function m(a,b){for(var c=0;c<a.length;c++)"number"==typeof a[c][0]&&(a[c]=b(a[c])),"object"==typeof a[c]&&(a[c]=m(a[c],b));return a}function n(a){var b=a[0],c=a[1];return[k(b/W)-360*Math.floor((k(b/W)+180)/360),k(Math.PI/2-2*Math.atan(Math.exp(-1*c/W)))]}function o(a){var b=a[0],c=Math.max(Math.min(a[1],89.99999),-89.99999);return[l(b)*W,W/2*Math.log((1+Math.sin(l(c)))/(1-Math.sin(l(c))))]}function p(a,b,c){if("Point"===a.type)a.coordinates=b(a.coordinates);else if("Feature"===a.type)a.geometry=p(a.geometry,b,!0);else if("FeatureCollection"===a.type)for(var d=0;d<a.features.length;d++)a.features[d]=p(a.features[d],b,!0);else if("GeometryCollection"===a.type)for(var e=0;e<a.geometries.length;e++)a.geometries[e]=p(a.geometries[e],b,!0);else a.coordinates=m(a.coordinates,b);return c||b===o&&(a.crs=Z),b===n&&delete a.crs,a}function q(a){return p(a,o)}function r(a){return p(a,n)}function s(a,b){return b>a?-1:a>b?1:0}function t(a,b,c){return s((b[0]-a[0])*(c[1]-a[1])-(c[0]-a[0])*(b[1]-a[1]),0)}function u(a,b){var c=b[0]-a[0],d=b[1]-a[1];return c*c+d*d}function v(a,b){var c=b;for(var d in a){var e=t(b,c,a[d]);(-1===e||0===e&&u(b,a[d])>u(b,c))&&(c=a[d])}return c}function w(a){function b(a,b){return a[0]-b[0]>a[1]-b[1]?1:a[0]-b[0]<a[1]-b[1]?-1:0}if(0===a.length)return[];if(1===a.length)return a;for(var c=[a.sort(b)[0]],d=0;d<c.length;d++){var e=v(a,c[d]);e!==c[0]&&c.push(e)}return c}function x(a,b){for(var c=!1,d=-1,e=a.length,f=e-1;++d<e;f=d)(a[d][1]<=b[1]&&b[1]<a[f][1]||a[f][1]<=b[1]&&b[1]<a[d][1])&&b[0]<(a[f][0]-a[d][0])*(b[1]-a[d][1])/(a[f][1]-a[d][1])+a[d][0]&&(c=!0);return c}function y(a,b){if(a&&a.length){if(1===a.length)return x(a[0],b);if(x(a[0],b)){for(var c=1;c<a.length;c++)if(x(a[c],b))return!1;return!0}return!1}return!1}function z(a,b,c,d){var e=(d[0]-c[0])*(a[1]-c[1])-(d[1]-c[1])*(a[0]-c[0]),f=(b[0]-a[0])*(a[1]-c[1])-(b[1]-a[1])*(a[0]-c[0]),g=(d[1]-c[1])*(b[0]-a[0])-(d[0]-c[0])*(b[1]-a[1]);if(0!==g){var h=e/g,i=f/g;if(h>=0&&1>=h&&i>=0&&1>=i)return!0}return!1}function A(a,b){for(var c=0;c<a.length-1;c++)for(var d=0;d<b.length-1;d++)if(z(a[c],a[c+1],b[d],b[d+1]))return!0;return!1}function B(a,b){for(var c=0;c<b.length;c++)for(var d=b[c],e=0;e<d.length-1;e++)for(var f=0;f<a.length-1;f++)if(z(d[e],d[e+1],a[f],a[f+1]))return!0;return!1}function C(a,b){for(var c=0;c<a.length;c++)if(B(a[c],b))return!0;return!1}function D(a,b){for(var c=0;c<b.length;c++)return B(a,b[c])?!0:!1}function E(a,b){for(var c=0;c<a.length;c++)return D(a[c],b)?!0:!1}function F(a,b){for(var c=0;c<a.length;c++)return E(a[c],b)?!0:!1}function G(a){for(var b=[],c=0;c<a.length;c++){var d=a[c].slice();I(d[0],d[d.length-1])===!1&&d.push(d[0]),b.push(d)}return b}function H(a,b){if("Feature"===a.type&&(a=a.geometry),"Feature"===b.type&&(b=b.geometry),"LineString"===a.type){if("LineString"===b.type)return A(a.coordinates,b.coordinates);if("MultiLineString"===b.type)return B(a.coordinates,b.coordinates);if("Polygon"===b.type)return B(a.coordinates,G(b.coordinates));if("MultiPolygon"===b.type)return D(a.coordinates,b.coordinates)}else if("MultiLineString"===a.type){if("LineString"===b.type)return B(b.coordinates,a.coordinates);if("Polygon"===b.type||"MultiLineString"===b.type)return C(a.coordinates,b.coordinates);if("MultiPolygon"===b.type)return E(a.coordinates,b.coordinates)}else if("Polygon"===a.type){if("LineString"===b.type)return B(b.coordinates,G(a.coordinates));if("MultiLineString"===b.type)return C(G(a.coordinates),b.coordinates);if("Polygon"===b.type)return C(G(a.coordinates),G(b.coordinates));if("MultiPolygon"===b.type)return E(G(a.coordinates),b.coordinates)}else if("MultiPolygon"===a.type){if("LineString"===b.type)return D(b.coordinates,a.coordinates);if("Polygon"===b.type||"MultiLineString"===b.type)return E(G(b.coordinates),a.coordinates);if("MultiPolygon"===b.type)return F(a.coordinates,b.coordinates)}else if("Feature"===a.type){var c=new J(a.geometry);return c.intersects(b)}return!1}function I(a,b){for(var c=0;c<a.length;c++)for(var d=0;d<b.length;d++)if(a[c]!==b[d])return!1;return!0}function J(a){if(a)switch(a.type){case"Point":return new K(a);case"MultiPoint":return new L(a);case"LineString":return new M(a);case"MultiLineString":return new N(a);case"Polygon":return new O(a);case"MultiPolygon":return new P(a);case"Feature":return new Q(a);case"FeatureCollection":return new R(a);case"GeometryCollection":return new S(a);default:throw new Error("Unknown type: "+a.type)}}function K(a){var b=Array.prototype.slice.call(arguments);if(a&&"Point"===a.type&&a.coordinates)c(this,a);else if(a&&Array.isArray(a))this.coordinates=a;else{if(!(b.length>=2))throw"Terraformer: invalid input for Terraformer.Point";this.coordinates=b}this.type="Point",this.__defineGetter__("bbox",function(){return d(this)})}function L(a){if(a&&"MultiPoint"===a.type&&a.coordinates)c(this,a);else{if(!Array.isArray(a))throw"Terraformer: invalid input for Terraformer.MultiPoint";this.coordinates=a}this.type="MultiPoint",this.__defineGetter__("bbox",function(){return d(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function M(a){if(a&&"LineString"===a.type&&a.coordinates)c(this,a);else{if(!Array.isArray(a))throw"Terraformer: invalid input for Terraformer.LineString";this.coordinates=a}this.type="LineString",this.__defineGetter__("bbox",function(){return d(this)})}function N(a){if(a&&"MultiLineString"===a.type&&a.coordinates)c(this,a);else{if(!Array.isArray(a))throw"Terraformer: invalid input for Terraformer.MultiLineString";this.coordinates=a}this.type="MultiLineString",this.__defineGetter__("bbox",function(){return d(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function O(a){if(a&&"Polygon"===a.type&&a.coordinates)c(this,a);else{if(!Array.isArray(a))throw"Terraformer: invalid input for Terraformer.Polygon";this.coordinates=a}this.type="Polygon",this.__defineGetter__("bbox",function(){return d(this)})}function P(a){if(a&&"MultiPolygon"===a.type&&a.coordinates)c(this,a);else{if(!Array.isArray(a))throw"Terraformer: invalid input for Terraformer.MultiPolygon";this.coordinates=a}this.type="MultiPolygon",this.__defineGetter__("bbox",function(){return d(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function Q(a){if(a&&"Feature"===a.type&&a.geometry)c(this,a);else{if(!(a&&a.type&&a.coordinates))throw"Terraformer: invalid input for Terraformer.Feature";this.geometry=a}this.type="Feature",this.__defineGetter__("bbox",function(){return d(this)})}function R(a){if(a&&"FeatureCollection"===a.type&&a.features)c(this,a);else{if(!Array.isArray(a))throw"Terraformer: invalid input for Terraformer.FeatureCollection";this.features=a}this.type="FeatureCollection",this.__defineGetter__("length",function(){return this.features?this.features.length:0}),this.__defineGetter__("bbox",function(){return d(this)})}function S(a){if(a&&"GeometryCollection"===a.type&&a.geometries)c(this,a);else if(Array.isArray(a))this.geometries=a;else{if(!a.coordinates||!a.type)throw"Terraformer: invalid input for Terraformer.GeometryCollection";this.type="GeometryCollection",this.geometries=[a]}this.type="GeometryCollection",this.__defineGetter__("length",function(){return this.geometries?this.geometries.length:0}),this.__defineGetter__("bbox",function(){return d(this)})}function T(a,b,c){for(var d=o(a),e=c||64,f=b||250,g={type:"Polygon",coordinates:[[]]},h=1;e>=h;h++){var i=h*(360/e)*Math.PI/180;g.coordinates[0].push([d[0]+f*Math.cos(i),d[1]+f*Math.sin(i)])}return r(g)}function U(a,b,e){var f=e||64,g=b||250;if(!a||a.length<2||!g||!f)throw new Error("Terraformer: missing parameter for Terraformer.Circle");c(this,new Q({type:"Feature",geometry:T(a,g,f),properties:{radius:g,center:a,steps:f}})),this.__defineGetter__("bbox",function(){return d(this)}),this.__defineGetter__("radius",function(){return this.properties.radius}),this.__defineSetter__("radius",function(a){this.properties.radius=a,this.recalculate()}),this.__defineGetter__("steps",function(){return this.properties.steps}),this.__defineSetter__("steps",function(a){this.properties.steps=a,this.recalculate()}),this.__defineGetter__("center",function(){return this.properties.center}),this.__defineSetter__("center",function(a){this.properties.center=a,this.recalculate()})}var V={},W=6378137,X=57.29577951308232,Y=.017453292519943,Z={type:"link",properties:{href:"http://spatialreference.org/ref/sr-org/6928/ogcwkt/",type:"ogcwkt"}},$={type:"link",properties:{href:"http://spatialreference.org/ref/epsg/4326/ogcwkt/",type:"ogcwkt"}};a.prototype={then:function(a,b){return this._thens.push({resolve:a,reject:b}),this},resolve:function(a){return this._complete("resolve",a),this},reject:function(a){return this._complete("reject",a),this},_complete:function(a,b){this.then="resolve"===a?function(a){a(b)}:function(a,c){c(b)},this.resolve=this.reject=function(){throw new Error("Deferred already completed.")};for(var c=0;c<this._thens.length;c++){var d=this._thens[c];d[a]&&d[a](b)}delete this._thens}};var _=["length","bbox"];return J.prototype={toMercator:function(){return q(this)},toGeographic:function(){return r(this)},envelope:function(){var a=d(this);return{x:a[0],y:a[1],w:Math.abs(a[0]-a[2]),h:Math.abs(a[1]-a[3])}},convexHull:function(){var a,b,c=[];if("Point"===this.type)return this.coordinates&&this.coordinates.length>0?[this.coordinates]:[];if("LineString"===this.type||"MultiPoint"===this.type){if(!(this.coordinates&&this.coordinates.length>0))return[];c=this.coordinates}else if("Polygon"===this.type||"MultiLineString"===this.type){if(!(this.coordinates&&this.coordinates.length>0))return[];for(a=0;a<this.coordinates.length;a++)c=c.concat(this.coordinates[a])}else{if("MultiPolygon"!==this.type)throw new Error("Unable to get convex hull of "+this.type);if(!(this.coordinates&&this.coordinates.length>0))return[];for(a=0;a<this.coordinates.length;a++)for(b=0;b<this.coordinates[a].length;b++)c=c.concat(this.coordinates[a][b])}return w(c)},toJSON:function(){var a={};for(var b in this)this.hasOwnProperty(b)&&this[b]&&_.indexOf(b)&&(a[b]=this[b]);return a.bbox=d(this),a},toJson:function(){return JSON.stringify(this)}},J.prototype.within=function(a){var b;if("Point"===a.type)return"Point"===this.type?I(this.coordinates,a.coordinates):!1;if("Polygon"===a.type){if("Polygon"===this.type)return console.log("inside"),this.coordinates.length&&y(a.coordinates,this.coordinates[0][0][0])?(console.log("further inside"),!H(this,a)):!1;if("Point"===this.type)return y(a.coordinates,this.coordinates)}if("MultiPolygon"===a.type){if("Point"===this.type){if(a.coordinates.length)for(var c=0;c<a.coordinates.length;c++)if(b=a.coordinates[c],y(b,this.coordinates)&&C(this.coordinates,a.coordinates)===!1)return!0;return!1}if("Polygon"===this.type&&E(this.coordinates,a.coordinates)===!1&&a.coordinates.length)for(var d=0;d<a.coordinates.length;d++)return b=a.coordinates[d],y(b,this.coordinates[0][0])===!1?!1:!0}return!1},J.prototype.intersects=function(a){if("Feature"===a.type&&(a=a.geometry),"LineString"===this.type){if("LineString"===a.type)return A(this.coordinates,a.coordinates);if("MultiLineString"===a.type)return B(this.coordinates,a.coordinates);if("Polygon"===a.type)return B(this.coordinates,G(a.coordinates));if("MultiPolygon"===a.type)return D(this.coordinates,a.coordinates)}else if("MultiLineString"===this.type){if("LineString"===a.type)return B(a.coordinates,this.coordinates);if("Polygon"===a.type||"MultiLineString"===a.type)return C(this.coordinates,a.coordinates);if("MultiPolygon"===a.type)return E(this.coordinates,a.coordinates)}else if("Polygon"===this.type){if("LineString"===a.type)return B(a.coordinates,G(this.coordinates));if("MultiLineString"===a.type)return C(G(this.coordinates),a.coordinates);if("Polygon"===a.type)return C(G(this.coordinates),G(a.coordinates));if("MultiPolygon"===a.type)return E(G(this.coordinates),a.coordinates)}else if("MultiPolygon"===this.type){if("LineString"===a.type)return D(a.coordinates,this.coordinates);if("Polygon"===a.type||"MultiLineString"===a.type)return E(G(a.coordinates),this.coordinates);if("MultiPolygon"===a.type)return F(this.coordinates,a.coordinates)}else if("Feature"===this.type){var c=new J(this.geometry);return c.intersects(a)}return b("Type "+this.type+" to "+a.type+" intersection is not supported by intersects"),!1},K.prototype=new J,K.prototype.constructor=K,L.prototype=new J,L.prototype.constructor=L,L.prototype.forEach=function(a){for(var b=0;b<this.length;b++)a.apply(this,[this.coordinates[b],b,this.coordinates]);return this},L.prototype.addPoint=function(a){return this.coordinates.push(a),this},L.prototype.insertPoint=function(a,b){return this.coordinates.splice(b,0,a),this},L.prototype.removePoint=function(a){return"number"==typeof a?this.coordinates.splice(a,1):this.coordinates.splice(this.coordinates.indexOf(a),1),this},L.prototype.get=function(a){return new K(this.coordinates[a])},M.prototype=new J,M.prototype.constructor=M,M.prototype.addVertex=function(a){return this.coordinates.push(a),this},M.prototype.insertVertex=function(a,b){return this.coordinates.splice(b,0,a),this},M.prototype.removeVertex=function(a){return this.coordinates.splice(a,1),this},N.prototype=new J,N.prototype.constructor=N,N.prototype.forEach=function(a){for(var b=0;b<this.coordinates.length;b++)a.apply(this,[this.coordinates[b],b,this.coordinates])},N.prototype.get=function(a){return new M(this.coordinates[a])},O.prototype=new J,O.prototype.constructor=O,O.prototype.addVertex=function(a){return this.coordinates[0].push(a),this},O.prototype.insertVertex=function(a,b){return this.coordinates[0].splice(b,0,a),this},O.prototype.removeVertex=function(a){return this.coordinates[0].splice(a,1),this},O.prototype.contains=function(a){if("Point"===a.type)return y(this.coordinates,a.coordinates);if("Polygon"===a.type){if(a.coordinates.length>0&&a.coordinates[0].length>0&&y(this.coordinates,a.coordinates[0][0])===!0&&this.intersects(a)===!1)return!0}else if("MultiPolygon"===a.type&&a.coordinates.length>0)for(var b=0;b<a.coordinates.length;b++)if(a.coordinates[b][0].length>0&&y(this.coordinates,a.coordinates[b][0][0])===!0&&this.intersects({type:"Polygon",coordinates:a.coordinates[b]})===!1)return!0;return!1},P.prototype=new J,P.prototype.constructor=P,P.prototype.forEach=function(a){for(var b=0;b<this.coordinates.length;b++)a.apply(this,[this.coordinates[b],b,this.coordinates])},P.prototype.contains=function(a){if("Point"!==a.type)throw new Error("Only points are supported");for(var b=0;b<this.coordinates.length;b++)if(y(this.coordinates[b],a.coordinates))return!0;return!1},P.prototype.get=function(a){return new O(this.coordinates[a])},Q.prototype=new J,Q.prototype.constructor=Q,Q.prototype.contains=function(a){if("Point"!==a.type)throw new Error("Only points are supported");if(!this.geometry.type.match(/Polygon/))throw new Error("Only features containing Polygons and MultiPolygons are supported");if("MultiPolygon"===this.geometry.type)for(var b=0;b<this.geometry.coordinates.length;b++)if(y(this.geometry.coordinates[b],a.coordinates))return!0;return"Polygon"===this.geometry.type?y(this.geometry.coordinates,a.coordinates):!1},R.prototype=new J,R.prototype.constructor=R,R.prototype.forEach=function(a){for(var b=0;b<this.features.length;b++)a.apply(this,[this.features[b],b,this.features])},R.prototype.get=function(a){var b;return this.forEach(function(c){c.id===a&&(b=c)}),new Q(b)},S.prototype=new J,S.prototype.constructor=S,S.prototype.forEach=function(a){for(var b=0;b<this.geometries.length;b++)a.apply(this,[this.geometries[b],b,this.geometries])},S.prototype.get=function(a){return new J(this.geometries[a])},U.prototype=new J,U.prototype.constructor=U,U.prototype.recalculate=function(){return this.geometry=T(this.center,this.radius,this.steps),this},U.prototype.contains=function(a){if("Point"!==a.type)throw new Error("Only points are supported");return y(this.geometry.coordinates,a.coordinates)},U.prototype.toJSON=function(){var a=J.prototype.toJSON.call(this);return a.properties.center=a.center,a.properties.steps=a.steps,a.properties.radius=a.radius,delete a.center,delete a.steps,delete a.radius,a},V.Primitive=J,V.Point=K,V.MultiPoint=L,V.LineString=M,V.MultiLineString=N,V.Polygon=O,V.MultiPolygon=P,V.Feature=Q,V.FeatureCollection=R,V.GeometryCollection=S,V.Circle=U,V.toMercator=q,V.toGeographic=r,V.Tools={},V.Tools.positionToMercator=o,V.Tools.positionToGeographic=n,V.Tools.applyConverter=p,V.Tools.toMercator=q,V.Tools.toGeographic=r,V.Tools.createCircle=T,V.Tools.calculateBounds=d,V.Tools.calculateEnvelope=j,V.Tools.coordinatesContainPoint=x,V.Tools.polygonContainsPoint=y,V.Tools.arrayIntersectsArray=A,V.Tools.coordinatesContainPoint=x,V.Tools.convexHull=w,V.MercatorCRS=Z,V.GeographicCRS=$,V.Deferred=a,V});