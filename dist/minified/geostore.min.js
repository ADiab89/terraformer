!function(a,b){"object"==typeof module&&"object"==typeof module.exports&&(exports=module.exports=b()),"function"==typeof define&&define.amd&&define(["terraformer/terraformer"],b),"object"==typeof a.navigator&&("undefined"==typeof a.Terraformer&&(a.Terraformer={}),a.Terraformer.GeoStore=b().GeoStore)}(this,function(){function a(){this._events={},this._once={},this._maxListeners=10,this._add=function(a,b,c){var d={listener:b};return c&&(d.once=!0),this._events[a]?this._events[a].push(d):this._events[a]=[d],this._maxListeners&&this._events[a].count>this._maxListeners&&console&&console.warn&&console.warn("EventEmitter Error: Maximum number of listeners"),this},this.on=function(a,b){return this._add(a,b)},this.addListener=this.on,this.once=function(a,b){return this._add(a,b,!0)},this.removeListener=function(a){if(!this._events[a])return this;for(var b=this._events.length-1;b--;)this._events[b].listener===callback&&this._events.splice(b,1);return this},this.removeAllListeners=function(a){return this._events[a]=void 0,this},this.setMaxListeners=function(a){return this._maxListeners=a,this},this.emit=function(){var a,b=Array.prototype.slice.apply(arguments),c=[];if(b.length){var d=b.shift();if(this._events[d])for(a=this._events[d].length;a--;)this._events[d][a].listener.apply(null,b),this._events[d][a].once&&c.push(listener);for(a=c.length;a--;)this.removeListener(d,c[a])}return this}}function b(){var b=this;a.call(this),this._destination=[],this._emit=this.emit,this.emit=function(a,c){var d;if("data"===a)for(d=b._destination.length;d--;)b._destination[d].write(c);else if("end"===a)for(d=b._destination.length;d--;)b._destination[d].write(c);b._emit(a,c)}}function c(a,b){var c=arguments.length>2?Array.prototype.slice.call(arguments,2):null;return function(){return b.apply(a,c||arguments)}}function d(a){if(!a.store||!a.index)throw new Error("Terraformer.GeoStore requires an instace of a Terraformer.Store and a instance of Terraformer.RTree");this.index=a.index,this.store=a.store,this._stream=null,this._additional_indexes=[]}b.prototype.pipe=function(a){this._destination.push(a)},b.prototype.unpipe=function(a){if(a)for(var b=this._destination.length-1;b--;)this._destination[b].listener===a&&this._destination.splice(b,1);else this._destination=[]};var e,f={};return"object"==typeof this.navigator&&(e=this.Terraformer),"object"==typeof module&&"object"==typeof module.exports&&(e=require("terraformer")),arguments[0]&&"function"==typeof define&&define.amd&&(e=arguments[0]),d.prototype.add=function(a,b){var c;if(!a.type.match(/Feature/))throw new Error("Terraform.GeoStore : only Features and FeatureCollections are supported");if("Feature"===a.type&&!a.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");if("FeatureCollection"===a.type){for(var d=0;d<a.features.length;d++){var f=a.features[d];if(c=e.Tools.calculateBounds(f),!f.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");this.index.insert({x:c[0],y:c[1],w:Math.abs(c[0]-c[2]),h:Math.abs(c[1]-c[3])},f.id)}this.store.add(a,b)}else c=e.Tools.calculateBounds(a),this.index.insert({x:c[0],y:c[1],w:Math.abs(c[0]-c[2]),h:Math.abs(c[1]-c[3])},a.id),this.store.add(a,b)},d.prototype.remove=function(a,b){this.get(a,c(this,function(d,e){d?b("Could not get feature to remove",null):this.index.remove(e,a,c(this,function(c){c?b("Could not remove from index",null):this.store.remove(a,b)}))}))},d.prototype.contains=function(a){var b=Array.prototype.slice.call(arguments);b.shift();var d=b.pop();b.length&&b[1];var f=new e.Primitive(a),g=e.Tools.calculateEnvelope(f);this.index.search(g,c(this,function(a,b){var c=[],g=0,h=0,i=this,j=function(a){if(g++,a){var j=new e.Primitive(a.geometry);f.within(j)&&(i._stream?g===b.length?i._stream.emit("end",a):i._stream.emit("data",a):c.push(a)),g>=b.length&&(h?d&&d("Could not get all geometries",null):i._stream?i._stream=null:d&&d(null,c)),g>=b.length&&h&&d&&d("Could not get all geometries",null)}},k=function(){g++,h++,g>=b.length&&d&&d("Could not get all geometries",null)};if(b&&b.length)for(var l=function(a,b){a?k():j(b)},m=0;m<b.length;m++)this.get(b[m],l);else d&&d(null,c)}))},d.prototype.within=function(a){var b=Array.prototype.slice.call(arguments);b.shift();var d=b.pop();if(b.length)var f=b[0];var g=new e.Primitive(a),h=e.Tools.calculateEnvelope(g);this.index.within(h,c(this,function(a,b){var c=[],h=0,i=0,j=this;if(f&&j._additional_indexes.length){var k,l={};for(k=0;k<b.length;k++)l[b[k]]=!0;for(var m=Object.keys(f),n=0;n<m.length;n++)for(k=0;k<j._additional_indexes.length;k++);}var o=function(a){if(h++,a){var f=new e.Primitive(a.geometry);f.within(g)&&(j._stream?h===b.length?j._stream.emit("end",a):j._stream.emit("data",a):c.push(a)),h>=b.length&&(i?d&&d("Could not get all geometries",null):j._stream?j._stream=null:d&&d(null,c))}},p=function(){h++,i++,h>=b.length&&d&&d("Could not get all geometries",null)};if(b&&b.length)for(var q=function(a,b){a?p():o(b)},k=0;k<b.length;k++)this.get(b[k],q);else d&&d(null,c)}))},d.prototype.update=function(a,b){var d=e.Primitive(a);if("Feature"!==d.type)throw new Error("Terraform.GeoStore : only Features and FeatureCollections are supported");if(!d.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");this.get(d.id,c(this,function(a,c){if(a)b("Could find feature",null);else{var f=new e.Primitive(c);this.index.remove(f.envelope(),f.id),this.index.insert(d.envelope(),d.id),this.store.update(d,b)}}))},d.prototype.get=function(a,b){this.store.get(a,b)},d.prototype.createReadStream=function(){return this._stream=new b,this._stream},d.prototype.addIndex=function(a){this._additional_indexes.push(a)},f.GeoStore=d,f});